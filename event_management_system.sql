USE DBMS_PROJECT2;
CREATE TABLE CLIENTS (
  CLIENT_ID INT NOT NULL AUTO_INCREMENT,
  CLIENT_NAME VARCHAR(30) NOT NULL,
  ADDRESS_LINE_1 VARCHAR(100) NOT NULL,
  ADDRESS_LINE_2 VARCHAR(100),
  ADDRESS_LINE_3 VARCHAR(100),
  BUDGET DECIMAL(10,2) NOT NULL,
  BILL_NO INT unique,
  PRIMARY KEY (CLIENT_ID)
);

CREATE TABLE GUESTS (
  GUEST_ID INT NOT NULL AUTO_INCREMENT,
  GUEST_NAME VARCHAR(30) NOT NULL,
  ADDRESS_LINE_1 VARCHAR(100) NOT NULL,
  ADDRESS_LINE_2 VARCHAR(100),
  ADDRESS_LINE_3 VARCHAR(100),
  CLIENT_ID INT NOT NULL,
  PRIMARY KEY (GUEST_ID),
  FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID) on delete cascade
);

CREATE TABLE VIPS (
  GUEST_ID INT NOT NULL,
  VIP_NAME VARCHAR(30) NOT NULL,
  PHONE_NO VARCHAR(10) NOT NULL,
  DESIGNATION VARCHAR(50),
  AGE INT,
  FOREIGN KEY (GUEST_ID) REFERENCES GUESTS (GUEST_ID) on delete cascade
);

CREATE TABLE VENUES (
  VENUE_ID INT NOT NULL AUTO_INCREMENT,
  VENUE_TYPE ENUM('OUTDOOR','INDOOR'),
  ACCOMMODATION_QUANTITY INT,
  PRICE DECIMAL(10,2) NOT NULL,
  ADDRESS_LINE_1 VARCHAR(100) NOT NULL,
  ADDRESS_LINE_2 VARCHAR(100),
  ADDRESS_LINE_3 VARCHAR(100),
  PRIMARY KEY (VENUE_ID)
);

CREATE TABLE EVENTS (
  EVENT_ID INT NOT NULL AUTO_INCREMENT,
  EVENT_NAME VARCHAR(30) NOT NULL,
  EVENT_TYPE VARCHAR(50) NOT NULL,
  EVENT_SYNOPSIS VARCHAR(200),
  VENUE_ID INT NOT NULL,
  TIME TIME NOT NULL,
  DATE DATE NOT NULL,
  CLIENT_ID INT NOT NULL,
  PRIMARY KEY (EVENT_ID),
  FOREIGN KEY (VENUE_ID) REFERENCES VENUES (VENUE_ID),
  FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID) on delete cascade
);

CREATE TABLE EMPLOYEES (
  EMPLOYEE_NO INT NOT NULL AUTO_INCREMENT,
  DOB DATE NOT NULL,
  DESIGNATION VARCHAR(50) NOT NULL,
  SALARY DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (EMPLOYEE_NO)
);

CREATE TABLE DECORATORS (
  COMPANY_NAME VARCHAR(50) NOT NULL,
  TYPE_OF_DECOR ENUM('OUTDOOR','INDOOR'),
  COTATION DECIMAL(10,2) NOT NULL,
  THEME VARCHAR(30),
  PRIMARY KEY (COMPANY_NAME)
);

CREATE TABLE CATERERS (
  CATERER_ID INT NOT NULL AUTO_INCREMENT,
  CATERER_NAME VARCHAR(30) NOT NULL,
  VED_PRICE_PLATE DECIMAL(10,2) NOT NULL,
  NON_VEG_PRICE_PLATE DECIMAL(10,2) NOT NULL,
  VEG_QUANTITY INT,
  NON_VEG_QUANTITY INT,
  CUISINE VARCHAR(50),
  PRIMARY KEY (CATERER_ID)
);

CREATE TABLE EVENT_MANAGED_BY (
	EVENT_ID INT NOT NULL,
	EMPLOYEE_NO INT NOT NULL,
	FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (EVENT_ID) on delete cascade,
	FOREIGN KEY (EMPLOYEE_NO) REFERENCES EMPLOYEES (EMPLOYEE_NO)
);

CREATE TABLE EVENT_DECORATED_BY (
	EVENT_ID INT NOT NULL,
    COMPANY_NAME VARCHAR(50) NOT NULL,
    CLIENT_ID INT NOT NULL,
    FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (EVENT_ID) on delete cascade,
    FOREIGN KEY (COMPANY_NAME) REFERENCES DECORATORS (COMPANY_NAME) on delete cascade,
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID) on delete cascade
);

CREATE TABLE EVENT_CATERED_BY (
	 EVENT_ID INT NOT NULL,
     CATERER_ID INT NOT NULL,
     FOREIGN KEY (EVENT_ID) REFERENCES EVENTS (EVENT_ID) on delete cascade,
     FOREIGN KEY (CATERER_ID) REFERENCES CATERERS (CATERER_ID) on delete cascade
);

CREATE TABLE PHONE_NOS (
	CLIENT_ID INT NOT NULL,
    GUEST_ID INT NOT NULL,
    EMPLOYEE_NO INT NOT NULL,
    COUNTRY_CODE VARCHAR(3) DEFAULT '+91',
    PHONE_NO VARCHAR(10) NOT NULL,
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENTS (CLIENT_ID) on delete cascade,
    FOREIGN KEY (GUEST_ID) REFERENCES GUESTS (GUEST_ID) on delete cascade,
    FOREIGN KEY (EMPLOYEE_NO) REFERENCES EMPLOYEES (EMPLOYEE_NO) on delete cascade
);
